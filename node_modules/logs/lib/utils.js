"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("util");
function wrap(logger, levels) {
}
exports.wrap = wrap;
const FORMAT_REGEX = /%[sdj]/g;
function format(...args) {
    if (typeof args[0] !== 'string') {
        let objects = [];
        for (let i = 0; i < args.length; i++) {
            objects.push(util_1.inspect(args[i]));
        }
        return objects.join(' ');
    }
    let i = 1;
    let str = String(args[0]).replace(FORMAT_REGEX, (x) => {
        switch (x) {
            case '%s':
                return String(args[i++]);
            case '%d':
                return Number(args[i++]).toString();
            case '%j':
                return JSON.stringify(args[i++]);
            default:
                return x;
        }
    });
    for (let len = args.length, x = args[i]; i < len; x = args[++i]) {
        if (x === null || typeof x !== 'object') {
            str += ' ' + x;
        }
        else {
            str += ' ' + util_1.inspect(x);
        }
    }
    return str;
}
exports.format = format;
function isObject(val) {
    return val != null && typeof val === "object" && Array.isArray(val) === false;
}
function isObjectObject(o) {
    return isObject(o) && Object.prototype.toString.call(o) === "[object Object]";
}
function isPlainObject(o) {
    let ctor, prot;
    if (!isObjectObject(o))
        return false;
    ctor = o.constructor;
    if (typeof ctor !== "function")
        return false;
    prot = ctor.prototype;
    if (!isObjectObject(prot))
        return false;
    if (!prot.hasOwnProperty("isPrototypeOf")) {
        return false;
    }
    return true;
}
exports.isPlainObject = isPlainObject;
//# sourceMappingURL=utils.js.map